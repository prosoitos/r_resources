#+OPTIONS: title:t date:t author:t email:t
#+OPTIONS: toc:1 h:6 num:nil |:t todo:nil
#+OPTIONS: *:t -:t ::t <:t \n:t e:t creator:nil
#+OPTIONS: f:t inline:t tasks:t tex:t timestamp:t
#+OPTIONS: html-preamble:t html-postamble:t

#+TITLE:   R: Resources
#+DATE:	  {{{time(%B %d\, %Y)}}}
#+AUTHOR:  Marie-Hélène Burle
#+EMAIL:   msb2@sfu.ca

* Learning R

** Online resources

The R community is extremely active and has built many open source [[https://bookdown.org/][bookdown]] books, tutorials, cheatsheets, videos...

The list below is far from exhaustive and new resources keep popping up. If you look online, you won't stop finding new, excellent, and open source R resources.

*** Getting started with R and the tidyverse

The book [[http://r4ds.had.co.nz/index.html][R for Data Science by Garrett Grolemund and Hadley Wickham]] is a must read for all beginner/intermediate R users, as well as advanced users not familiar with the tidyverse. This book will get you started with good habits and is an excellent introduction to R.

*** Cheatsheets

Who doesn't love cheatsheets? Good news: RStudio and others created [[https://www.rstudio.com/resources/cheatsheets/][great cheatsheets]] on the tidyverse and a few other packages. If you use the tidyverse, those are an absolute must have.

/Note: some of these cheatsheet are accessible from within RStudio, under the help menu./

*** Writing readable and well-formatted code

While syntax matters greatly in code execution (e.g. missing quotes, commas, or parenthesis will affect the meaning of your code), R will equally run formatted and non-formatted code.

Code, however, should not simply be written for the machine and should be made as human readable as possible. This is key, for instance, for code sharing and code review. While there are no official R formatting guidelines, [[http://style.tidyverse.org/][Hadley Wickham wrote a short book on R formatting]]. [[https://google.github.io/styleguide/Rguide.xml][Google's R Style Guide]] offers another popular (and quite similar) set of recommendations. Whichever formatting rules you choose, it is important that you commit to them for the sake of *formatting consistency*.

Of note, when you work on someone else's code, you should adopt their style, again, for the sake of consistency.

*** Understanding R as a programming language

The book [[https://adv-r.hadley.nz/][Advanced R by Hadley Wickham]] will give you a better understanding of R as a programming language and help you get to the next level of R writing. Don't get turned off by the term "advanced". The book is very readable and is useful for R users at all levels to better understand the various types of data, the functioning of R, etc.

[[http://adv-r.had.co.nz/][The first edition]] of that book, which focuses on base R rather than on the tidyverse, is also well worth a read.

*** Writing your own packages

The book [[http://r-pkgs.had.co.nz/][R packages by Hadley Wickham]] will get you started if you want to write your own packages.

The on-line manual [[https://cran.r-project.org/doc/manuals/R-exts.html][Writing R Extensions by the R Core Team]] gives a more dense and exhaustive documentation if you need something that is not in Hadley's book.

*** Using R Markdown

The books [[https://bookdown.org/yihui/rmarkdown/][R Markdown: The Definitive Guide by Yihui Xie, J. J. Allaire, and Garrett Grolemund]] and [[https://bookdown.org/yihui/bookdown/][bookdown: Authoring Books and Technical Documents with R Markdown by Yihui Xie]] cover the use of R Markdown.

*** Text mining with R

The book [[https://www.tidytextmining.com/][Text Mining with R by Julia Silge and David Robinson]].

*** GIS in R

The tutorials [[https://data.cdrc.ac.uk/tutorial/an-introduction-to-spatial-data-analysis-and-visualisation-in-r][An Introduction to Spatial Data Analysis and Visualisation in R by Guy Lansley and James Cheshire]] as well as the book [[https://geocompr.robinlovelace.net/][Geocomputation with R by Robin Lovelace, Jakub Nowosad, and Jannes Muenchow]] will teach you how to map data and conduct spacial data analysis in R or how to bridge R and [[https://www.qgis.org/en/site/][QGIS]].

*** Videos

RStudio offers [[https://resources.rstudio.com/][teaching videos]] and [[https://resources.rstudio.com/webinars][webinars]].

The SFU Library [[https://www.lib.sfu.ca/find/other-materials/lynda][provides access to the website Lynda.com]] which has videos on R, but note that this is not an open source resource and the videos are mostly designed for beginners.

*** Others

[[https://serialmentor.com/dataviz/][Fundamentals of Data Visualization by Claus O. Wilke]], [[https://tidyeval.tidyverse.org/][Tidy evaluation by Lionel Henry and Hadley Wickham]], [[https://cran.r-project.org/doc/FAQ/R-FAQ.html#Why-are-powers-of-negative-numbers-wrong_003f][R FAQ by Kurt Hornik]], [[http://varianceexplained.org/RData/][David Robinson's course]], [[https://csgillespie.github.io/efficientR/][Efficient R programming by Colin Gillespie and Robin Lovelace]], [[http://rdpeng.github.io/RProgDA/][Mastering Software Development in R by Roger D. Peng, Sean Kross, and Brooke Anderson]]...

** Resources at SFU

*** The Research Commons

The SFU Research Commons offers [[https://www.lib.sfu.ca/about/branches-depts/rc/services/consultations#r-help-and-consultations][one-on-one R consultations]] and [[https://www.lib.sfu.ca/about/branches-depts/rc/services/workshops#r-software][R workshops]].

The Research Commons is also a partner of [[https://software-carpentry.org/][Software Carpentry]] and [[http://www.datacarpentry.org/][Data Carpentry]], now merged under [[http://carpentries.org/][the Carpentries]]. The Carpentries organize workshops-including workshops on R-regularly. You can find their upcoming workshops on their [[https://carpentries.org/][website]].

*** The library

The SFU library owns several classic books on R. Don't hesitate to talk to a librarian if you need help finding them. And remember that you can also suggest new book acquisitions if important books are missing from the collection.

It is worth noting that R development is very active. While the information in books remains valid, new packages are constantly being added which allow for novel approaches. And you are much more likely to find recent information online than in books.

*** The Scientific Programming Study Group

[[http://sciprog.ca/][SciProg]], short for Scientific Programming Study Group, is an SFU student lead group open to anyone interested in learning or sharing programming resources through workshops, hackathons, and other events. R workshops are regularly offered. If you are interested in learning about a particular topic (or if you are interested in giving workshops), get in touch!

* Trouble-shooting in R

#+BEGIN_red
1. *Read the error message**
2. Look for typos (R is case sensitive)
3. Re-start your R process
4. Make sure your working directory is where you think it is and your files are where you think they are
5. Update R, RStudio if you use it, and your packages
6. Look at the help files of the functions involved
7. Google using judicious keywords
8. If relevant, look for explanations and examples in Hadley's books and/or RStudio cheatsheets
9. Simplify your non running code until it starts running or alternatively start very simple and add elements until the code breaks
#+END_red

/*Don't panic as soon as you see something red: some information (for instance when you install new packages) and warnings are also red. They are important to read, but they are not error messages. Most students panic as soon as they see error messages and they do not read those. Error messages are not there to punish you: they are very useful bits of information that are critical to finding a solution. While they may not always make sense, read them several times. You might understand part of it and it can give you hints on how to get started. Error messages are also very useful to look for help on google./

If, after doing all of these, you are stick stuck, then ask for help:

* Getting help with R

** One-on-one consultations with the Research Commons

The Research Commons offers one-on-one consultations to graduate students and faculty who need help with their code. You can book consultations [[https://www.lib.sfu.ca/about/branches-depts/rc/services/consultations#r-help-and-consultations][here]].

** Asking questions online

There are wonderful websites in which you can ask your R questions and get help quickly (and for free) from the best R users from around the world!

- [[https://stackoverflow.com/questions/tagged/r][Stack Overflow, with the tag r]]
- [[https://community.rstudio.com/][The RStudio Community forum]]
- [[https://twitter.com/search?q=%23rstats&src=savs][Twitter with the hashtag #rstats]]
- There is a Slack team of people reading [[http://r4ds.had.co.nz/index.html][R for Data Science]]
- There are also a number of mailing lists

This is a beauty of the open source community. To have a happy experience however, you need to do your part and ask *a good question*: you can't expect people to spend their free time helping you if you aren't putting some efforts too.

** How to ask for help

#+BEGIN_quote
This is critical...
#+END_quote

The Research Commons offers workshops on how to ask R questions properly. You can look for upcoming R workshops [[https://www.lib.sfu.ca/about/branches-depts/rc/services/workshops#r-software][here]].

*** The golden rules

In order for others to understand your issue and be able to help you, the code that you post online needs to follow 6 rules, which are that it:

#+BEGIN_red
1. makes sense without being run,
2. can be run,
3. does not contain sensitive or personal data,
4. does not use data which needs to be downloaded,
5. does not contain more than is necessary to reproduce the problem.
6. is properly formatted
#+END_red

Let's go over each point. The posted code:

**** 1. Makes sense without being run

This means that it includes the code and its output: not everybody wants to run your code and they may be able to see what is going on just by looking at this.

**** 2. Can be run

Anyone copying your code and running it on their machine should get the output you got. This is necessary for others to test potential solutions without having to do the work of first making up data that looks like yours.

**** 3. Does not contain sensitive or personal data

If your data is sensitive, it needs to be anonymised or you need to make a toy example which mimics the structure of your data.

**** 4. Does not use data which needs to be downloaded

If your code uses, for instance, data from a src_R[:eval no]{.csv} file, the code alone will not run. Uploading your src_R[:eval no]{.csv} file or a src_R[:eval no]{.rds} file for others to download is tedious and many people will not be keen to do so. At best, your question will be ignored, at worse, you will get negative feed-back. You either need to make a toy example which has all the characteristics necessary to replicate your problem or you need to provide a sample of your data using src_R[:eval no]{dput()}. Hadley Wickham explains [[http://adv-r.had.co.nz/Reproducibility.html][how to use dput() to create a reproducible example]] in [[http://adv-r.had.co.nz/][his first version of Advanced R]].

**** 5. Does not contain more than is necessary to reproduce the problem

While not absolutely necessary, reducing your code to the simplest and smallest sample necessary to reproduce your problem will make it easier for others to pinpoint what is going on. Additionally, it is likely that you will find the problem yourself in the process of producing this "minimal reproducible example". The accepted answer to the very popular question [[https://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example][how to make a great R reproducible example?]] on the site [[https://stackoverflow.com][Stack Overflow]] gives all the characteristics of a minimal reproducible example.

**** 6. Is properly formatted

The [[https://community.rstudio.com/][RStudio Community forum]] website uses R Markdown formatting with R code blocks between src_R[:eval no]{```r} and src_R[:eval no]{```}. To format code blocks on the [[https://stackoverflow.com/][Stack Overflow]] website, you need to add 4 species at the start of each line. Inline code on both websites can be formatted with backticks.

The tidyverse package [[https://reprex.tidyverse.org/][reprex]] can do the formatting for you.

*** How do I follow the golden rules?

Here are some extremely useful links:

https://support.rstudio.com/hc/en-us/articles/200552336
https://www.dummies.com/programming/r/r-for-dummies-cheat-sheet/
https://www.r-bloggers.com/three-tips-for-posting-good-questions-to-r-help-and-stack-overflow/
https://resources.rstudio.com/webinars/help-me-help-you-creating-reproducible-examples-jenny-bryan
https://swcarpentry.github.io/r-novice-gapminder/03-seeking-help/
https://masalmon.eu/2018/07/22/wheretogethelp/
http://www.cookbook-r.com/

*** Data anonymisation
:PROPERTIES:
:ID:       h:5fa991db-3c7d-4e83-a5bc-de6ac1000ee7
:END:

You can anonymise sensitive information yourself, or you can use the package [[https://cran.r-project.org/web/packages/anonymizer/index.html][anonymizer]].

* Getting involved in the R community

[[https://ropensci.org/blog/][rOpenSci]]

[[https://rladies.org/][R Ladies]], an organization promoting gender diversity in the R community, recently opened [[https://www.meetup.com/R-Ladies-Vancouver/][a new chapter in Vancouver]].

*** Answering questions

xxxxlink to asking question link on other page

*** Contributing code

**** Filling issues and submitting pull requests

[[https://github.com/][GitHub]] 

**** Submitting packages


* Keeping up with R development and finding information on advanced techniques

R has a very healthy and active community of developers creating packages and techniques at a fast pace.

To remain informed of new developments, an efficient strategy is to follow the hashtag [[https://twitter.com/search?q=%23rstats&src=typd][#rstats on twitter]] and keep an eye on blogs such as the [[https://www.r-bloggers.com/][R-bloggers]], the [[https://ropensci.org/blog/][rOpenSci blog]], the [[https://blog.rstudio.com/][RStudio blog]]...

[[https://journal.r-project.org/][The R Journal]] and many articles in statistical journals describe novel techniques in R and provide examples of applications.

Many modern statistical books provide R code allowing a direct implementation in R of the methodology covered.
